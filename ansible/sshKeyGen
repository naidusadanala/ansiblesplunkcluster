SSH Keygen Process (For Passwordless Rsync Cron Job) Open a terminal/shell and run the following command ssh-keygen -t rsa You will be asked where you would like to save the key. The default setting is normally acceptable (just press enter to accept the default), but if you are setting up a key as a root user you may want to store your key in a different location. Generating public/private rsa key pair.Enter file in which to save the key (/home/username/.ssh/id_rsa): You will be prompted to enter a passphrase. If you choose to use a passphrase you will need to type it in every time you use the key to connect to a server (spaces are ok to use) You can choose not to use a passphrase but this is generally considered less secure. Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/username/.ssh/id_rsa.Your public key has been saved in /home/username/.ssh/id_rsa.pub.The key fingerprint is:bf:7b:63:a8:91:29:76:2b:03:ac:21:8c:91:4a:fa:11 username@server.domain.com Note that you can change your passphrase at any time using the command:sshkeygen -p Before we copy your new public key to your server we will add it to the local authorized_keys file.cd ~/.sshcp id_rsa.pub authorized_keys cd ~/.sshscp authorized_keys root@host.servername.com:/root/.ssh/Your key can be loaded into the memory of your local computer, so you will only have to type in your passphrase one time and every subsequent ssh session will automatically attempt to login.On your local computer terminal/shell, once you type in the command ssh-add. You will be prompted for your passphrase and after that you should receive a confirmation that the identity has been added. Now you can use your key several times without having to type in your passphrase every time.ssh-add Now that your new key has been copied to the server you can start using it for SSH logins. If your user name is the same on your local machine and on your server, you can connect simply with:ssh host.servername.com If your local user name and server user name are different, you can specify the user to login as using the command:ssh user@host.servername.com